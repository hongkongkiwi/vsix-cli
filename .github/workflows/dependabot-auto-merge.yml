name: Dependabot Auto-Merge

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

permissions:
  contents: write
  pull-requests: write
  checks: read
  statuses: read

jobs:
  dependabot:
    runs-on: ubuntu-latest
    if: github.actor == 'dependabot[bot]' && !github.event.pull_request.draft
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Get PR metadata
        id: metadata
        uses: dependabot/fetch-metadata@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Wait for CI checks
        uses: fountainhead/action-wait-for-check@v1.2.0
        id: wait-for-ci
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          checkName: "CI"
          ref: ${{ github.event.pull_request.head.sha }}
          timeoutSeconds: 1800 # 30 minutes
          intervalSeconds: 30

      - name: Wait for security checks
        uses: fountainhead/action-wait-for-check@v1.2.0
        id: wait-for-security
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          checkName: "Security Scan"
          ref: ${{ github.event.pull_request.head.sha }}
          timeoutSeconds: 900 # 15 minutes
          intervalSeconds: 30
        continue-on-error: true # Security checks might not always be present

      - name: Check if auto-merge should proceed
        id: should-merge
        run: |
          echo "Dependency update type: ${{ steps.metadata.outputs.update-type }}"
          echo "Dependency name: ${{ steps.metadata.outputs.dependency-names }}"
          
          # Auto-merge conditions
          should_merge=false
          
          # GitHub Actions updates (patch and minor versions)
          if [[ "${{ steps.metadata.outputs.package-ecosystem }}" == "github-actions" ]]; then
            if [[ "${{ steps.metadata.outputs.update-type }}" == "version-update:semver-patch" ]] || \
               [[ "${{ steps.metadata.outputs.update-type }}" == "version-update:semver-minor" ]]; then
              should_merge=true
            fi
          fi
          
          # Docker updates (patch versions only for safety)
          if [[ "${{ steps.metadata.outputs.package-ecosystem }}" == "docker" ]]; then
            if [[ "${{ steps.metadata.outputs.update-type }}" == "version-update:semver-patch" ]]; then
              should_merge=true
            fi
          fi
          
          # Check if PR has auto-merge label
          if [[ "${{ contains(github.event.pull_request.labels.*.name, 'auto-merge') }}" == "true" ]]; then
            echo "PR has auto-merge label"
          else
            echo "PR does not have auto-merge label"
            should_merge=false
          fi
          
          echo "should_merge=$should_merge" >> $GITHUB_OUTPUT

      - name: Auto-approve PR
        if: steps.should-merge.outputs.should_merge == 'true' && steps.wait-for-ci.outputs.conclusion == 'success'
        run: |
          gh pr review --approve "${{ github.event.pull_request.number }}" --body "Auto-approving this Dependabot PR as it updates ${{ steps.metadata.outputs.dependency-names }} with a ${{ steps.metadata.outputs.update-type }} change and all checks have passed."
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Enable auto-merge
        if: steps.should-merge.outputs.should_merge == 'true' && steps.wait-for-ci.outputs.conclusion == 'success'
        run: |
          gh pr merge --auto --squash "${{ github.event.pull_request.number }}"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Add comment for manual review
        if: steps.should-merge.outputs.should_merge == 'false'
        run: |
          comment_body=""
          if [[ "${{ steps.metadata.outputs.update-type }}" == "version-update:semver-major" ]]; then
            comment_body="🚨 **Major version update detected** - This PR updates ${{ steps.metadata.outputs.dependency-names }} with a major version change. Please review manually before merging."
          elif [[ "${{ steps.metadata.outputs.package-ecosystem }}" == "docker" ]] && [[ "${{ steps.metadata.outputs.update-type }}" != "version-update:semver-patch" ]]; then
            comment_body="🐳 **Docker dependency update** - This PR updates Docker dependencies with a ${{ steps.metadata.outputs.update-type }} change. Please review manually before merging."
          elif [[ "${{ contains(github.event.pull_request.labels.*.name, 'auto-merge') }}" != "true" ]]; then
            comment_body="⚠️ **Manual review required** - This PR does not have the 'auto-merge' label. Please review and merge manually if appropriate."
          else
            comment_body="ℹ️ **Manual review required** - This PR requires manual review due to the update type or dependency."
          fi
          
          if [[ -n "$comment_body" ]]; then
            gh pr comment "${{ github.event.pull_request.number }}" --body "$comment_body"
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Handle CI failure
        if: steps.wait-for-ci.outputs.conclusion == 'failure'
        run: |
          gh pr comment "${{ github.event.pull_request.number }}" --body "❌ **CI checks failed** - Auto-merge cancelled. Please review the failing checks and fix any issues."
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Security check for dependencies (runs in parallel)
  security-check:
    runs-on: ubuntu-latest
    if: github.actor == 'dependabot[bot]' && !github.event.pull_request.draft
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Get PR metadata
        id: metadata
        uses: dependabot/fetch-metadata@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Security advisory check
        run: |
          echo "Checking for known security advisories for updated dependencies..."
          echo "Dependencies: ${{ steps.metadata.outputs.dependency-names }}"
          
          # For GitHub Actions, we primarily rely on GitHub's security advisories
          # For Docker images, we could add additional security scanning here
          
          # This is a placeholder for more sophisticated security checks
          # You could integrate with tools like:
          # - GitHub Security Advisories API
          # - Snyk
          # - WhiteSource/Mend
          # - OWASP Dependency Check
          
          echo "✅ Basic security check passed"

  # Summary job that other workflows can depend on
  dependabot-summary:
    runs-on: ubuntu-latest
    needs: [dependabot, security-check]
    if: always() && github.actor == 'dependabot[bot]'
    steps:
      - name: Get PR metadata
        id: metadata
        uses: dependabot/fetch-metadata@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Summary
        run: |
          echo "## Dependabot Auto-Merge Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**PR**: #${{ github.event.pull_request.number }}" >> $GITHUB_STEP_SUMMARY
          echo "**Dependencies**: ${{ steps.metadata.outputs.dependency-names || 'N/A' }}" >> $GITHUB_STEP_SUMMARY
          echo "**Update Type**: ${{ steps.metadata.outputs.update-type || 'N/A' }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [[ "${{ needs.dependabot.result }}" == "success" ]]; then
            echo "✅ **Status**: Auto-merge completed or approved" >> $GITHUB_STEP_SUMMARY
          elif [[ "${{ needs.dependabot.result }}" == "skipped" ]]; then
            echo "⏭️ **Status**: Auto-merge skipped (manual review required)" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Status**: Auto-merge failed" >> $GITHUB_STEP_SUMMARY
          fi 