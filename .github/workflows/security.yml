name: Security Checks

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: {}

jobs:
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check for hardcoded secrets
        run: |
          echo "Checking for potential hardcoded secrets..."
          
          # Check for potential secrets
          if grep -r -i "password\|secret\|key\|token" vsix-cli | grep -v "# " | grep -v "Show" | grep "="; then
            echo "⚠️  Potential hardcoded secrets found:"
            grep -r -i "password\|secret\|key\|token" vsix-cli | grep -v "# " | grep -v "Show" | grep "="
            exit 1
          else
            echo "✅ No hardcoded secrets detected"
          fi

      - name: Check for unsafe practices
        run: |
          echo "Checking for unsafe shell practices..."
          
          # Check for eval usage
          if grep -n "eval" vsix-cli; then
            echo "⚠️  Found 'eval' usage - review for security"
            exit 1
          else
            echo "✅ No 'eval' usage found"
          fi
          
          # Check for insecure downloads
          if grep -n "curl.*-k\|wget.*--no-check-certificate" vsix-cli; then
            echo "⚠️  Found insecure download commands"
            exit 1
          else
            echo "✅ No insecure download commands found"
          fi
          
          # Check for HTTP downloads
          if grep -n "http://" vsix-cli; then
            echo "⚠️  Found HTTP downloads - should use HTTPS"
            exit 1
          else
            echo "✅ All downloads use HTTPS"
          fi

      - name: Check script integrity
        run: |
          echo "Verifying script integrity..."
          
          # Check shebang
          if ! head -1 vsix-cli | grep -q "#!/bin/bash"; then
            echo "⚠️  Script missing proper shebang"
            exit 1
          else
            echo "✅ Script has proper shebang"
          fi
          
          # Check for strict mode
          if ! grep -q "set -euo pipefail" vsix-cli; then
            echo "⚠️  Script doesn't use strict error handling"
            exit 1
          else
            echo "✅ Strict error handling enabled"
          fi

      - name: Verify trusted domains
        run: |
          echo "Checking download sources..."
          
          # Extract URLs from the script
          urls=$(grep -o 'https://[^"]*' vsix-cli | sort -u)
          
          trusted_domains=(
            "marketplace.visualstudio.com"
            "open-vsx.org" 
            "extensions.coder.com"
            "marketplace.eclipse.org"
            "api.github.com"
            "raw.githubusercontent.com"
            "github.com"
          )
          
          echo "Found URLs:"
          echo "$urls"
          
          for url in $urls; do
            domain=$(echo "$url" | sed 's|https://||' | cut -d'/' -f1)
            
            trusted=false
            for trusted_domain in "${trusted_domains[@]}"; do
              if [[ "$domain" == "$trusted_domain" ]]; then
                trusted=true
                break
              fi
            done
            
            if [[ "$trusted" == false ]]; then
              echo "⚠️  Untrusted domain found: $domain"
              exit 1
            fi
          done
          
          echo "✅ All domains are trusted"

  dependency-check:
    name: Dependency Security
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check dependencies
        run: |
          echo "Checking script dependencies..."
          
          # List all external commands used
          external_commands=$(grep -o '\b[a-z][a-z]*\b' vsix-cli | grep -E '^(curl|wget|git|jq|unzip|tar)$' | sort -u)
          
          echo "External commands used:"
          echo "$external_commands"
          
          # Check for any suspicious command usage
          if grep -q "nc\|netcat\|telnet" vsix-cli; then
            echo "⚠️  Found network tools that could be security risks"
            exit 1
          else
            echo "✅ No suspicious network tools found"
          fi

  permissions-check:
    name: Permissions Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check file permissions
        run: |
          echo "Checking for overly permissive operations..."
          
          # Check for chmod 777 or similar
          if grep -n "chmod 777\|chmod 666" vsix-cli; then
            echo "⚠️  Found overly permissive chmod operations"
            exit 1
          else
            echo "✅ No overly permissive chmod found"
          fi
          
          # Check for sudo usage that might be risky
          if grep -n "sudo.*rm\|sudo.*chmod" vsix-cli; then
            echo "⚠️  Found potentially risky sudo operations"
            # Don't exit 1 here as some sudo usage might be legitimate
          else
            echo "✅ No risky sudo operations found"
          fi 